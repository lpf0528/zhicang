# Generated by Django 5.2.6 on 2025-09-13 14:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='授权码')),
                ('create_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建用户ID')),
                ('update_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='更新用户ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('type', models.CharField(choices=[('customer', '客户：省内/省外'), ('supplier', '供应商：织厂/批发商')], max_length=255, verbose_name='系统配置类型')),
                ('name', models.CharField(max_length=255, verbose_name='类别名称')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '类别配置',
                'verbose_name_plural': '类别配置',
                'db_table': 'category_config',
            },
        ),
        migrations.CreateModel(
            name='InvoiceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='授权码')),
                ('create_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建用户ID')),
                ('update_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='更新用户ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=255, verbose_name='单据标题')),
                ('address', models.CharField(max_length=255, verbose_name='单据地址')),
                ('telephone', models.CharField(max_length=255, verbose_name='单据电话(多个；)')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('tip', models.CharField(default='温馨提示：请细查货物，如有质量问题请在七天内提出，一经开剪，恕不退换，谢谢合作。', max_length=255, verbose_name='提示')),
            ],
            options={
                'verbose_name': '单据信息',
                'verbose_name_plural': '单据信息',
                'db_table': 'invoice_info',
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='授权码')),
                ('create_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建用户ID')),
                ('update_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='更新用户ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('type', models.CharField(choices=[('product_category', '货物类别：布/纱/书版'), ('unit', '货物单位：米/本/套'), ('version', '版本：W03/W05'), ('settlement_method', '结算方式：现金/月结/微信'), ('logistic', '货运部：顺丰/拼包/申通/圆通'), ('payment_method', '收款方式：现金/微信/支付宝')], max_length=255, verbose_name='系统配置类型')),
                ('name', models.CharField(max_length=255, verbose_name='系统配置名称')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '系统配置',
                'verbose_name_plural': '系统配置',
                'db_table': 'system_config',
            },
        ),
        migrations.CreateModel(
            name='ZcUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='授权码')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='授权码')),
                ('create_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建用户ID')),
                ('update_user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='更新用户ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=255, verbose_name='部门名称')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_manager', to=settings.AUTH_USER_MODEL, verbose_name='负责人')),
                ('users', models.ManyToManyField(related_name='department_users', to=settings.AUTH_USER_MODEL, verbose_name='部门下的用户')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
                'db_table': 'department',
            },
        ),
    ]
